{"ast":null,"code":"var _jsxFileName = \"D:\\\\learning\\\\Python\\\\url-journey\\\\frontend\\\\src\\\\components\\\\ProgressSidebar.jsx\";\n// src/components/ProgressSidebar.jsx\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressSidebar = ({\n  totalUrls,\n  analyzedUrls,\n  averageTimePerUrl,\n  actualTimeTaken,\n  isLoading\n}) => {\n  const progressPercentage = totalUrls > 0 ? analyzedUrls / totalUrls * 100 : 0;\n  const remainingUrls = totalUrls - analyzedUrls;\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"md:fixed md:right-4 right-0 md:top-24 top-0 md:w-72 w-full p-6 bg-gradient-to-b from-gray-100 to-gray-200 dark:from-gray-700 dark:to-gray-800 rounded-lg shadow-lg z-10 md:max-h-[calc(100vh-6rem)] max-h-full overflow-y-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold text-gray-800 dark:text-white mb-4\",\n      children: \"Analysis Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full bg-gray-300 dark:bg-gray-600 rounded-full h-4 overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `absolute top-0 left-0 h-4 rounded-full transition-all duration-500 ease-in-out ${isLoading ? 'animate-pulse' : ''}`,\n          style: {\n            width: `${progressPercentage}%`,\n            background: isLoading ? 'linear-gradient(90deg, #3B82F6, #60A5FA, #3B82F6)' : 'linear-gradient(90deg, #10B981, #34D399, #10B981)',\n            backgroundSize: '200% 100%',\n            animation: isLoading ? 'gradientMove 2s linear infinite' : 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-700 dark:text-gray-300 mt-2\",\n        children: [\"Analyzed: \", analyzedUrls, \"/\", totalUrls, \" URLs (\", Math.round(progressPercentage), \"% complete)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-700 dark:text-gray-300\",\n        children: [\"Remaining: \", remainingUrls, \" URLs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressSidebar;\nexport default ProgressSidebar;\nvar _c;\n$RefreshReg$(_c, \"ProgressSidebar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProgressSidebar","totalUrls","analyzedUrls","averageTimePerUrl","actualTimeTaken","isLoading","progressPercentage","remainingUrls","formatTime","seconds","minutes","Math","floor","secs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","background","backgroundSize","animation","round","_c","$RefreshReg$"],"sources":["D:/learning/Python/url-journey/frontend/src/components/ProgressSidebar.jsx"],"sourcesContent":["// src/components/ProgressSidebar.jsx\r\nimport React from 'react';\r\n\r\nconst ProgressSidebar = ({ totalUrls, analyzedUrls, averageTimePerUrl, actualTimeTaken, isLoading }) => {\r\n  const progressPercentage = totalUrls > 0 ? (analyzedUrls / totalUrls) * 100 : 0;\r\n  const remainingUrls = totalUrls - analyzedUrls;\r\n  \r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = Math.floor(seconds % 60);\r\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"md:fixed md:right-4 right-0 md:top-24 top-0 md:w-72 w-full p-6 bg-gradient-to-b from-gray-100 to-gray-200 dark:from-gray-700 dark:to-gray-800 rounded-lg shadow-lg z-10 md:max-h-[calc(100vh-6rem)] max-h-full overflow-y-auto\">\r\n      <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Analysis Progress</h2>\r\n      <div className=\"mb-4\">\r\n        <div className=\"relative w-full bg-gray-300 dark:bg-gray-600 rounded-full h-4 overflow-hidden\">\r\n          <div\r\n            className={`absolute top-0 left-0 h-4 rounded-full transition-all duration-500 ease-in-out ${\r\n              isLoading ? 'animate-pulse' : ''\r\n            }`}\r\n            style={{\r\n              width: `${progressPercentage}%`,\r\n              background: isLoading\r\n                ? 'linear-gradient(90deg, #3B82F6, #60A5FA, #3B82F6)'\r\n                : 'linear-gradient(90deg, #10B981, #34D399, #10B981)',\r\n              backgroundSize: '200% 100%',\r\n              animation: isLoading ? 'gradientMove 2s linear infinite' : 'none',\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <p className=\"text-sm text-gray-700 dark:text-gray-300 mt-2\">\r\n          Analyzed: {analyzedUrls}/{totalUrls} URLs ({Math.round(progressPercentage)}% complete)\r\n        </p>\r\n        <p className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n          Remaining: {remainingUrls} URLs\r\n        </p>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressSidebar;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC,SAAS;EAAEC,YAAY;EAAEC,iBAAiB;EAAEC,eAAe;EAAEC;AAAU,CAAC,KAAK;EACtG,MAAMC,kBAAkB,GAAGL,SAAS,GAAG,CAAC,GAAIC,YAAY,GAAGD,SAAS,GAAI,GAAG,GAAG,CAAC;EAC/E,MAAMM,aAAa,GAAGN,SAAS,GAAGC,YAAY;EAE9C,MAAMM,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMI,IAAI,GAAGF,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACrC,OAAO,GAAGC,OAAO,IAAIG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAGA,IAAI,EAAE;EACpD,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,gOAAgO;IAAAC,QAAA,gBAC7OhB,OAAA;MAAIe,SAAS,EAAC,0DAA0D;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/FpB,OAAA;MAAKe,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBhB,OAAA;QAAKe,SAAS,EAAC,+EAA+E;QAAAC,QAAA,eAC5FhB,OAAA;UACEe,SAAS,EAAE,kFACTT,SAAS,GAAG,eAAe,GAAG,EAAE,EAC/B;UACHe,KAAK,EAAE;YACLC,KAAK,EAAE,GAAGf,kBAAkB,GAAG;YAC/BgB,UAAU,EAAEjB,SAAS,GACjB,mDAAmD,GACnD,mDAAmD;YACvDkB,cAAc,EAAE,WAAW;YAC3BC,SAAS,EAAEnB,SAAS,GAAG,iCAAiC,GAAG;UAC7D;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNpB,OAAA;QAAGe,SAAS,EAAC,+CAA+C;QAAAC,QAAA,GAAC,YACjD,EAACb,YAAY,EAAC,GAAC,EAACD,SAAS,EAAC,SAAO,EAACU,IAAI,CAACc,KAAK,CAACnB,kBAAkB,CAAC,EAAC,aAC7E;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJpB,OAAA;QAAGe,SAAS,EAAC,0CAA0C;QAAAC,QAAA,GAAC,aAC3C,EAACR,aAAa,EAAC,OAC5B;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACO,EAAA,GAvCI1B,eAAe;AAyCrB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}